paths:
  /tools/github:
    get:
      tags:
        - GitHub
      summary: List GitHub MCP tools
      description: |
        Returns all available GitHub tools following the MCP (Model Context Protocol) specification.
        Each tool includes its schema definition for proper integration with AI agents.
      operationId: listGitHubTools
      responses:
        '200':
          description: List of GitHub MCP tools
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitHubToolsList'
        '401':
          $ref: '../../common/responses.yaml#/components/responses/Unauthorized'
        '500':
          $ref: '../../common/responses.yaml#/components/responses/InternalServerError'

  /tools/github/{tool_name}:
    parameters:
      - name: tool_name
        in: path
        required: true
        description: GitHub tool name
        schema:
          type: string
          enum: 
            - github_create_issue
            - github_close_issue
            - github_create_pull_request
            - github_merge_pull_request
            - github_add_comment
            - github_get_repository
            - github_list_repositories
            - github_get_pull_request
            - github_list_pull_requests
            - github_get_issue
            - github_list_issues
            - github_create_branch
            - github_get_file
            - github_list_files
            - github_search_code
        example: "github_create_issue"
    
    get:
      tags:
        - GitHub
      summary: Get GitHub tool schema
      description: |
        Returns the MCP schema definition for a specific GitHub tool. This schema
        defines the input parameters and validation rules for the tool.
      operationId: getGitHubToolSchema
      responses:
        '200':
          description: Tool schema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitHubToolSchema'
        '401':
          $ref: '../../common/responses.yaml#/components/responses/Unauthorized'
        '404':
          $ref: '../../common/responses.yaml#/components/responses/NotFound'
        '500':
          $ref: '../../common/responses.yaml#/components/responses/InternalServerError'
    
    post:
      tags:
        - GitHub
      summary: Execute GitHub tool
      description: |
        Executes a GitHub tool following the MCP protocol. The tool performs the requested
        action and returns results in MCP-compliant format.
      operationId: executeGitHubTool
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GitHubToolExecutionRequest'
            examples:
              create_issue:
                summary: Create issue
                value:
                  arguments:
                    owner: "octocat"
                    repo: "hello-world"
                    title: "Bug report: Login form not working"
                    body: "The login form fails to submit in Safari browser"
                    labels: ["bug", "frontend"]
              create_pull_request:
                summary: Create pull request
                value:
                  arguments:
                    owner: "octocat"
                    repo: "hello-world"
                    title: "Fix: Login form submission in Safari"
                    body: "This PR fixes the login form submission issue in Safari"
                    head: "fix/login-safari"
                    base: "main"
      responses:
        '200':
          description: Tool execution result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitHubToolExecutionResponse'
        '400':
          $ref: '../../common/responses.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../../common/responses.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../../common/responses.yaml#/components/responses/Forbidden'
        '404':
          $ref: '../../common/responses.yaml#/components/responses/NotFound'
        '422':
          $ref: '../../common/responses.yaml#/components/responses/UnprocessableEntity'
        '500':
          $ref: '../../common/responses.yaml#/components/responses/InternalServerError'

components:
  schemas:
    GitHubToolsList:
      type: object
      required:
        - tools
      properties:
        tools:
          type: array
          items:
            $ref: '#/components/schemas/GitHubToolSummary'
        _links:
          $ref: '../../common/schemas.yaml#/components/schemas/Links'

    GitHubToolSummary:
      type: object
      required:
        - name
        - description
      properties:
        name:
          type: string
          example: "github_create_issue"
        description:
          type: string
          example: "Create a new issue in a GitHub repository"
        category:
          type: string
          enum: [issues, pull_requests, repositories, code, branches]
          example: "issues"
        inputSchema:
          type: object
          description: Brief schema overview
          properties:
            required:
              type: array
              items:
                type: string
              example: ["owner", "repo", "title"]

    GitHubToolSchema:
      type: object
      required:
        - name
        - description
        - inputSchema
      properties:
        name:
          type: string
          example: "github_create_issue"
        description:
          type: string
          example: "Create a new issue in a GitHub repository"
        category:
          type: string
          example: "issues"
        inputSchema:
          $ref: '#/components/schemas/MCPInputSchema'
        examples:
          type: array
          items:
            type: object
            properties:
              description:
                type: string
              input:
                type: object
              expectedOutput:
                type: object

    MCPInputSchema:
      type: object
      required:
        - type
        - properties
        - required
      properties:
        type:
          type: string
          enum: [object]
        properties:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MCPPropertySchema'
        required:
          type: array
          items:
            type: string
        additionalProperties:
          type: boolean
          default: false

    MCPPropertySchema:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          enum: [string, number, integer, boolean, array, object]
        description:
          type: string
        enum:
          type: array
          items: {}
        minLength:
          type: integer
        maxLength:
          type: integer
        minimum:
          type: number
        maximum:
          type: number
        items:
          $ref: '#/components/schemas/MCPPropertySchema'
        properties:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MCPPropertySchema'

    GitHubToolExecutionRequest:
      type: object
      required:
        - arguments
      properties:
        arguments:
          type: object
          additionalProperties: true
          description: Tool-specific arguments
        context:
          type: object
          properties:
            context_id:
              type: string
              description: MCP context ID for tracking
            trace_id:
              type: string
              description: Distributed tracing ID
            user:
              type: string
              description: User executing the tool

    GitHubToolExecutionResponse:
      type: object
      required:
        - content
        - isError
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/MCPContent'
          description: MCP-compliant content blocks
        isError:
          type: boolean
          description: Whether the execution resulted in an error
        metadata:
          type: object
          properties:
            tool:
              type: string
            execution_time:
              type: number
            rate_limit_remaining:
              type: integer
            rate_limit_reset:
              type: integer

    MCPContent:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          enum: [text, image, resource]
        text:
          type: string
          description: Text content (for type=text)
        data:
          type: string
          description: Base64 encoded data (for type=image)
        mimeType:
          type: string
          description: MIME type (for type=image)
        uri:
          type: string
          format: uri
          description: Resource URI (for type=resource)
        name:
          type: string
          description: Resource name (for type=resource)

    # GitHub-specific schemas

    GitHubIssue:
      type: object
      properties:
        number:
          type: integer
          example: 42
        title:
          type: string
          example: "Bug report: Login form not working"
        body:
          type: string
          example: "The login form fails to submit in Safari browser"
        state:
          type: string
          enum: [open, closed]
        labels:
          type: array
          items:
            type: string
        assignees:
          type: array
          items:
            type: string
        html_url:
          type: string
          format: uri
          example: "https://github.com/octocat/hello-world/issues/42"
        created_at:
          $ref: '../../common/schemas.yaml#/components/schemas/Timestamp'
        updated_at:
          $ref: '../../common/schemas.yaml#/components/schemas/Timestamp'

    GitHubPullRequest:
      type: object
      properties:
        number:
          type: integer
          example: 123
        title:
          type: string
          example: "Fix: Login form submission in Safari"
        body:
          type: string
        state:
          type: string
          enum: [open, closed, merged]
        head:
          type: object
          properties:
            ref:
              type: string
            sha:
              type: string
        base:
          type: object
          properties:
            ref:
              type: string
            sha:
              type: string
        mergeable:
          type: boolean
        merged:
          type: boolean
        html_url:
          type: string
          format: uri
        created_at:
          $ref: '../../common/schemas.yaml#/components/schemas/Timestamp'
        updated_at:
          $ref: '../../common/schemas.yaml#/components/schemas/Timestamp'

    GitHubRepository:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
          example: "hello-world"
        full_name:
          type: string
          example: "octocat/hello-world"
        description:
          type: string
        private:
          type: boolean
        archived:
          type: boolean
        disabled:
          type: boolean
        default_branch:
          type: string
          example: "main"
        visibility:
          type: string
          enum: [public, private, internal]
        html_url:
          type: string
          format: uri
        clone_url:
          type: string
          format: uri
        created_at:
          $ref: '../../common/schemas.yaml#/components/schemas/Timestamp'
        updated_at:
          $ref: '../../common/schemas.yaml#/components/schemas/Timestamp'