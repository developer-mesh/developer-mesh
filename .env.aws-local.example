# Example environment configuration for local development with real AWS services
# Copy this file to .env and update with your actual values

# Environment
ENVIRONMENT=development

# AWS Configuration
AWS_REGION=us-east-1
AWS_ACCESS_KEY_ID=your-access-key-id
AWS_SECRET_ACCESS_KEY=your-secret-access-key
# AWS_SESSION_TOKEN=your-session-token  # Only if using temporary credentials

# ElastiCache Redis Configuration
REDIS_HOST=your-elasticache-endpoint.serverless.region.cache.amazonaws.com
REDIS_PORT=6379
# REDIS_PASSWORD=your-redis-password  # If auth is enabled
# REDIS_TLS_ENABLED=true  # Enable if using TLS
# ELASTICACHE_AUTH_TOKEN=your-auth-token  # If using Redis AUTH

# Bastion Host Configuration (for SSH tunnel to ElastiCache)
BASTION_HOST_IP=your-bastion-ec2-ip
BASTION_KEY_FILE=$HOME/.ssh/your-bastion-key.pem
# AWS_ACCOUNT_ID=123456789012  # Optional, will auto-detect from credentials

# SQS Configuration
SQS_QUEUE_URL=https://sqs.region.amazonaws.com/account-id/queue-name
WORKER_QUEUE_TYPE=sqs
WORKER_ENABLED=true
WORKER_CONCURRENCY=10

# S3 Configuration
S3_BUCKET=your-s3-bucket-name
STORAGE_PROVIDER=s3

# Bedrock Configuration
BEDROCK_ENABLED=true

# Database Configuration (local PostgreSQL)
DB_HOST=localhost
DB_PORT=5432
DB_USER=postgres
DB_PASSWORD=postgres
DB_NAME=devops_mcp_dev

# API Server Configuration
PORT=8080
REQUIRE_AUTH=false

# WebSocket Configuration
WEBSOCKET_ENABLED=true
WS_REQUIRE_AUTH=false

# JWT Configuration
JWT_SECRET=dev-jwt-secret-minimum-32-characters-long

# Feature Flags
ELASTICACHE_ENABLED=true
SQS_ENABLED=true
S3_ENABLED=true

# Monitoring
LOG_LEVEL=debug

# Optional: Override specific service endpoints for testing
# S3_ENDPOINT=http://localhost:4566  # For LocalStack
# SQS_ENDPOINT=http://localhost:4566  # For LocalStack
# BEDROCK_ENDPOINT=http://localhost:4566  # For LocalStack