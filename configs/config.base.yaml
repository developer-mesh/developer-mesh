# Base Configuration - Common settings across all environments
# This file contains default values that can be overridden in environment-specific configs

# Application metadata
app:
  name: "developer-mesh"
  version: "${APP_VERSION:-1.0.0}"

# API Server Configuration
api:
  base_path: "/api/v1"
  read_timeout: 30s
  write_timeout: 30s
  idle_timeout: 120s
  shutdown_timeout: 30s
  enable_swagger: true
  enable_pprof: false
  enable_metrics: true
  max_request_size: 10485760  # 10MB
  
  # TLS Configuration for HTTPS
  tls:
    enabled: false  # Enable for production
    min_version: "1.3"  # TLS 1.3 by default
    cert_file: ""  # Path to server certificate
    key_file: ""   # Path to server key
    client_auth: "none"  # none, request, require, verify
    client_ca_file: ""  # Path to client CA for mutual TLS
    session_tickets: true
    enable_http2: true
    strict_sni: true
    ocsp_stapling: false
  
  # CORS Configuration
  cors:
    enabled: true
    allowed_origins: []
    allowed_methods: ["GET", "POST", "PUT", "DELETE", "OPTIONS"]
    allowed_headers: ["Authorization", "Content-Type", "X-Request-ID", "X-Tenant-ID"]
    exposed_headers: ["X-RateLimit-Limit", "X-RateLimit-Remaining", "X-RateLimit-Reset"]
    allow_credentials: true
    max_age: 86400
  
  # Rate Limit Configuration (API-level)
  rate_limit:
    enabled: true
    limit: 100
    period: 60s
    burst_factor: 3

# WebSocket Configuration
websocket:
  enabled: ${WEBSOCKET_ENABLED:-true}  # Default enabled, can be disabled via env
  max_connections: 10000
  read_buffer_size: 4096
  write_buffer_size: 4096
  ping_interval: 30s
  pong_timeout: 60s
  max_message_size: 1048576  # 1MB
  
  # Security Configuration
  security:
    require_auth: true
    hmac_signatures: false  # Enable in production
    allowed_origins: ["*"]  # Restrict in production
    max_frame_size: 1048576
    
  # Rate Limiting Configuration
  rate_limit:
    rate: 16.67  # 1000 per minute (16.67 per second)
    burst: 100
    per_ip: true
    per_user: true

# Authentication Configuration
auth:
  # JWT Configuration
  jwt:
    algorithm: "HS256"
    expiration: 24h
    refresh_enabled: true
    refresh_expiration: 7d
    issuer: "developer-mesh"
    
  # API Key Configuration
  api_keys:
    header: "X-API-Key"
    enable_database: true
    cache_ttl: 5m
    min_length: 16
    rotation_period: 90d
    
  # OAuth2 Configuration
  oauth2:
    enabled: false
    providers: []
    
  # Security Settings
  security:
    max_failed_attempts: 5
    lockout_duration: 15m
    password_min_length: 12
    require_mfa: false
    
  # Rate Limiting
  rate_limiting:
    enabled: true
    default:
      max_attempts: 100
      window: 1m
      lockout_period: 15m
    auth_endpoints:
      max_attempts: 5
      window: 1m
      lockout_period: 15m
      
  # Audit Configuration
  audit:
    enabled: true
    log_successful: true
    log_failed: true
    retention_days: 90

# Database Configuration
database:
  driver: "postgres"
  max_open_conns: 25
  max_idle_conns: 5
  conn_max_lifetime: 30m
  conn_max_idle_time: 10m
  health_check_period: 1m
  
  # Connection retry
  retry:
    max_attempts: 3
    initial_interval: 1s
    max_interval: 10s
    multiplier: 2
    
  # TLS/SSL Configuration
  ssl_mode: "disable"  # disable, require, verify-ca, verify-full
  tls:
    enabled: false  # Enable for production
    min_version: "1.3"  # TLS 1.3 by default
    cert_file: ""  # Path to client certificate
    key_file: ""   # Path to client key
    ca_file: ""    # Path to CA certificate
    
  # Vector Search Configuration
  vector:
    enabled: true
    index_type: "ivfflat"
    lists: 100
    probes: 10
    dimensions: 1536  # OpenAI ada-002

# Cache Configuration
cache:
  # Redis cache configuration
  type: "redis"
  address: "localhost:6379"  # Default for local development
  password: ""
  database: 0
  pool_size: 50
  min_idle_conns: 10
  dial_timeout: 5s
  read_timeout: 3s
  write_timeout: 3s
  pool_timeout: 3
  max_retries: 3
  
  # TLS Configuration for Redis/ElastiCache
  tls:
    enabled: false  # Enable for production
    min_version: "1.3"  # TLS 1.3 by default
    insecure_skip_verify: false  # Never true in production
    session_tickets: true  # Performance optimization
    session_cache_size: 1000
    
  # Key prefixes
  key_prefixes:
    context: "context:%s"
    vector: "vector:%s"

# Monitoring Configuration
monitoring:
  # Metrics
  metrics:
    enabled: true
    path: "/metrics"
    namespace: "devops_mcp"
    subsystem: ""
    
  # Logging
  logging:
    format: "json"
    timestamp_format: "2006-01-02T15:04:05.000Z07:00"
    caller: true
    stacktrace_level: "error"
    
  # Tracing
  tracing:
    enabled: false
    provider: "jaeger"
    sample_rate: 0.1
    
  # Health Checks
  health:
    liveness_path: "/health/live"
    readiness_path: "/health/ready"
    include_checks:
      - database
      - cache
      - adapters

# Engine Configuration
engine:
  event_buffer_size: 10000
  worker_pool_size: 10
  max_concurrent_operations: 20
  operation_timeout: 5m
  shutdown_timeout: 30s
  
  # Circuit Breaker
  circuit_breaker:
    enabled: true
    failure_threshold: 5
    success_threshold: 2
    timeout: 30s
    
  # Retry Policy
  retry:
    max_attempts: 3
    initial_interval: 1s
    max_interval: 30s
    multiplier: 2

# Storage Configuration
storage:
  # Context Storage
  context:
    provider: "database"  # database, s3, filesystem
    compression: true
    encryption: false
    
  # Embedding Storage
  embedding:
    enable_preprocessing: true
    enable_caching: true
    batch_size: 100
    default_similarity_threshold: 0.75

# Embedding Configuration
embedding:
  # Provider Configuration
  providers:
    # OpenAI Provider
    openai:
      enabled: false
      api_key: "${OPENAI_API_KEY}"
      models:
        - name: "text-embedding-3-large"
          dimensions: 3072
          max_tokens: 8191
        - name: "text-embedding-3-small"
          dimensions: 1536
          max_tokens: 8191
        - name: "text-embedding-ada-002"
          dimensions: 1536
          max_tokens: 8191
    
    # AWS Bedrock Provider
    bedrock:
      enabled: false
      region: "${AWS_REGION:-us-east-1}"
      endpoint: ""  # Optional custom endpoint
      models:
        - name: "amazon.titan-embed-text-v2:0"
          dimensions: 1024
          max_tokens: 8192
        - name: "cohere.embed-english-v3"
          dimensions: 1024
          max_tokens: 512
        - name: "cohere.embed-multilingual-v3"
          dimensions: 1024
          max_tokens: 512
    
    # Google AI Provider
    google:
      enabled: false
      api_key: "${GOOGLE_AI_API_KEY}"
      endpoint: ""  # Optional custom endpoint
      models:
        - name: "text-embedding-004"
          dimensions: 768
          max_tokens: 2048
        - name: "textembedding-gecko@003"
          dimensions: 768
          max_tokens: 3072
  
  # Default Agent Configuration
  default_agent_config:
    embedding_strategy: "balanced"  # quality, speed, cost, balanced
    model_preferences:
      primary_models:
        - "text-embedding-3-small"
        - "amazon.titan-embed-text-v2:0"
      fallback_models:
        - "text-embedding-ada-002"
        - "textembedding-gecko@003"
    constraints:
      max_tokens_per_request: 8000
      max_cost_per_day: 10.0
      preferred_dimensions: 1536
      allow_dimension_reduction: true
    fallback_behavior:
      enabled: true
      max_retries: 3
      retry_delay: "1s"
      use_cache_on_failure: true
  
  # Circuit Breaker Configuration
  circuit_breaker:
    failure_threshold: 5
    success_threshold: 2
    timeout: "30s"
    half_open_requests: 3
  
  # Router Configuration
  router:
    selection_strategy: "smart"  # smart, round_robin, least_cost, fastest
    cost_weight: 0.3
    quality_weight: 0.5
    speed_weight: 0.2
    cache_ttl: "5m"
  
  # Dimension Normalization
  normalization:
    target_dimensions: 1536  # Standard dimension for cross-model compatibility
    method: "pca"  # pca, truncate, pad
    preserve_magnitude: true

# Adapter Defaults
adapters:
  # Common HTTP client settings
  http_client:
    timeout: 30s
    max_idle_conns: 100
    max_conns_per_host: 10
    idle_conn_timeout: 90s
    tls_handshake_timeout: 10s
    expect_continue_timeout: 1s
    
  # Common retry settings
  retry:
    enabled: true
    max_attempts: 3
    initial_interval: 1s
    max_interval: 30s
    multiplier: 2
    
  # Common cache settings
  cache:
    enabled: true
    default_ttl: 5m

# Feature Flags
features:
  vector_search: true
  webhooks: true
  audit_logging: true
  distributed_tracing: false
  experimental_tools: false

# AWS Configuration - Default settings for AWS services
aws:
  region: "${AWS_REGION:-us-east-1}"
  # Service configuration defaults
  services:
    # ElastiCache defaults
    elasticache:
      enabled: ${ELASTICACHE_ENABLED:-false}
      
    # Queue defaults (Redis)
    queue:
      type: redis
      redis_stream: webhook-events
      
    # S3 defaults
    s3:
      enabled: ${S3_ENABLED:-false}
      
    # Bedrock defaults
    bedrock:
      enabled: ${BEDROCK_ENABLED:-false}

# Worker Configuration - Default settings
worker:
  enabled: ${WORKER_ENABLED:-false}
  queue_type: "${WORKER_QUEUE_TYPE:-memory}"  # Default to memory queue
  concurrency: ${WORKER_CONCURRENCY:-5}

# Graceful Shutdown
shutdown:
  timeout: 30s
  drain_timeout: 15s
  force_close_timeout: 5s