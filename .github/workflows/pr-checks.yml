name: PR Checks

on:
  pull_request:
    types: [opened, edited, synchronize, reopened]

jobs:
  pr-title:
    name: PR Title Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Check PR title
        uses: amannn/action-semantic-pull-request@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          types: |
            feat
            fix
            docs
            style
            refactor
            perf
            test
            build
            ci
            chore
            revert
          requireScope: false
          subjectPattern: ^(?![A-Z]).+$
          subjectPatternError: |
            The subject "{subject}" found in the pull request title "{title}"
            didn't match the configured pattern. Please ensure that the subject
            doesn't start with an uppercase character.

  pr-size:
    name: PR Size Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Check PR size
        uses: CodelyTV/pr-size-labeler@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          xs_label: 'size/xs'
          xs_max_size: '10'
          s_label: 'size/s'
          s_max_size: '100'
          m_label: 'size/m'
          m_max_size: '500'
          l_label: 'size/l'
          l_max_size: '1000'
          xl_label: 'size/xl'
          fail_if_xl: false
          message_if_xl: |
            This PR is very large (>1000 lines). Please consider breaking it into smaller PRs for easier review.

  branch-name:
    name: Branch Name Check
    runs-on: ubuntu-latest
    # Skip for main branch and dependabot
    if: |
      github.head_ref != 'main' && 
      !startsWith(github.head_ref, 'dependabot/')
    
    steps:
      - name: Check branch name
        uses: deepakputhraya/action-branch-name@master
        with:
          regex: '^(feature|fix|hotfix|chore|docs|test|refactor)\/[a-z0-9-]+$'
          allowed_prefixes: 'feature,fix,hotfix,chore,docs,test,refactor'
          ignore: main,dependabot/**
          min_length: 5
          max_length: 50

  commit-messages:
    name: Commit Message Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check commit messages
        uses: wagoid/commitlint-github-action@v5
        with:
          configFile: .github/commitlint.config.js
          failOnWarnings: false

  pr-description:
    name: PR Description Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Check PR description
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            const description = pr.body || '';
            
            // Check minimum length
            if (description.length < 50) {
              core.setFailed('PR description is too short. Please provide a detailed description of the changes.');
              return;
            }
            
            // Check for required sections
            const requiredSections = ['## Changes', '## Testing'];
            const missingSections = requiredSections.filter(section => 
              !description.includes(section)
            );
            
            if (missingSections.length > 0) {
              core.setFailed(`PR description is missing required sections: ${missingSections.join(', ')}`);
              return;
            }
            
            // Check for checklist items
            if (!description.includes('- [ ]') && !description.includes('- [x]')) {
              core.warning('Consider adding a checklist to track PR requirements');
            }
            
            console.log('✓ PR description meets requirements');

  linked-issue:
    name: Check Linked Issue
    runs-on: ubuntu-latest
    # Only enforce for feature and fix branches
    if: |
      startsWith(github.head_ref, 'feature/') || 
      startsWith(github.head_ref, 'fix/')
    
    steps:
      - name: Check for linked issue
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            const body = pr.body || '';
            
            // Check for issue references
            const issuePattern = /(closes|fixes|resolves)\s+#\d+/i;
            const hasLinkedIssue = issuePattern.test(body);
            
            if (!hasLinkedIssue) {
              core.warning('This PR does not reference any issues. Consider linking related issues using "Closes #123"');
            } else {
              console.log('✓ PR has linked issues');
            }