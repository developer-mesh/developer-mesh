openapi: 3.0.3
info:
  title: GitHub Tool Actions
  description: >
    Detailed documentation for GitHub actions available via the MCP Server API.
    This file is meant to be referenced from your main context_api.yaml using $ref.
  version: 1.0.0

components:
  schemas:
    CreateIssueRequest:
      type: object
      required:
        - owner
        - repo
        - title
      properties:
        owner:
          type: string
          description: Repository owner (organization or user)
          example: octocat
        repo:
          type: string
          description: Repository name
          example: hello-world
        title:
          type: string
          description: Issue title
          example: Bug in login form
        body:
          type: string
          description: Issue description
          example: The login form doesn't submit when using Safari
        labels:
          type: array
          description: Labels for the issue
          items:
            type: string
          example: ["bug", "frontend"]
    CreateIssueResponse:
      type: object
      properties:
        status:
          type: string
          example: success
        message:
          type: string
          example: Issue created successfully
        issue_url:
          type: string
          example: https://github.com/octocat/hello-world/issues/1
        _links:
          $ref: '../context_api.yaml#/components/schemas/Links'
    CloseIssueRequest:
      type: object
      required:
        - owner
        - repo
        - issue_number
      properties:
        owner:
          type: string
          description: Repository owner (organization or user)
          example: octocat
        repo:
          type: string
          description: Repository name
          example: hello-world
        issue_number:
          type: integer
          description: The number of the issue to close
          example: 42
    CloseIssueResponse:
      type: object
      properties:
        status:
          type: string
          example: success
        message:
          type: string
          example: Issue closed successfully
        issue_url:
          type: string
          example: https://github.com/octocat/hello-world/issues/42
        _links:
          $ref: '../context_api.yaml#/components/schemas/Links'
    CreatePullRequestRequest:
      type: object
      required:
        - owner
        - repo
        - title
        - head
        - base
      properties:
        owner:
          type: string
          description: Repository owner (organization or user)
          example: octocat
        repo:
          type: string
          description: Repository name
          example: hello-world
        title:
          type: string
          description: Title of the pull request
          example: Add new feature
        head:
          type: string
          description: The name of the branch where changes are implemented
          example: feature-branch
        base:
          type: string
          description: The name of the branch you want the changes pulled into
          example: main
        body:
          type: string
          description: Pull request description
          example: This PR adds a new feature.
    CreatePullRequestResponse:
      type: object
      properties:
        status:
          type: string
          example: success
        message:
          type: string
          example: Pull request created successfully
        pull_request_url:
          type: string
          example: https://github.com/octocat/hello-world/pull/101
        _links:
          $ref: '../context_api.yaml#/components/schemas/Links'
    MergePullRequestRequest:
      type: object
      required:
        - owner
        - repo
        - pull_number
      properties:
        owner:
          type: string
          description: Repository owner (organization or user)
          example: octocat
        repo:
          type: string
          description: Repository name
          example: hello-world
        pull_number:
          type: integer
          description: The number of the pull request to merge
          example: 101
    MergePullRequestResponse:
      type: object
      properties:
        status:
          type: string
          example: success
        message:
          type: string
          example: Pull request merged successfully
        pull_request_url:
          type: string
          example: https://github.com/octocat/hello-world/pull/101
        _links:
          $ref: '../context_api.yaml#/components/schemas/Links'

paths:
  /tools/github/actions/create_issue:
    post:
      summary: Create a GitHub issue
      description: Creates a new issue in a GitHub repository.
      tags:
        - tools
        - github
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateIssueRequest'
            examples:
              default:
                value:
                  owner: octocat
                  repo: hello-world
                  title: Bug in login form
                  body: The login form doesn't submit when using Safari
                  labels: ["bug", "frontend"]
      responses:
        '200':
          description: Issue created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateIssueResponse'
              examples:
                default:
                  value:
                    status: success
                    message: Issue created successfully
                    issue_url: https://github.com/octocat/hello-world/issues/1
                    _links:
                      self: /api/v1/tools/github/actions/create_issue
                      tool: /api/v1/tools/github
        '400':
          $ref: '../context_api.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../context_api.yaml#/components/responses/Unauthorized'
        '404':
          $ref: '../context_api.yaml#/components/responses/NotFound'
        '500':
          $ref: '../context_api.yaml#/components/responses/InternalServerError'

  /tools/github/actions/close_issue:
    post:
      summary: Close a GitHub issue
      description: Closes an existing issue in a GitHub repository.
      tags:
        - tools
        - github
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloseIssueRequest'
            examples:
              default:
                value:
                  owner: octocat
                  repo: hello-world
                  issue_number: 42
      responses:
        '200':
          description: Issue closed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloseIssueResponse'
              examples:
                default:
                  value:
                    status: success
                    message: Issue closed successfully
                    issue_url: https://github.com/octocat/hello-world/issues/42
                    _links:
                      self: /api/v1/tools/github/actions/close_issue
                      tool: /api/v1/tools/github
        '400':
          $ref: '../context_api.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../context_api.yaml#/components/responses/Unauthorized'
        '404':
          $ref: '../context_api.yaml#/components/responses/NotFound'
        '500':
          $ref: '../context_api.yaml#/components/responses/InternalServerError'

  /tools/github/actions/create_pull_request:
    post:
      summary: Create a GitHub pull request
      description: Creates a new pull request in a GitHub repository.
      tags:
        - tools
        - github
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePullRequestRequest'
            examples:
              default:
                value:
                  owner: octocat
                  repo: hello-world
                  title: Add new feature
                  head: feature-branch
                  base: main
                  body: This PR adds a new feature.
      responses:
        '200':
          description: Pull request created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePullRequestResponse'
              examples:
                default:
                  value:
                    status: success
                    message: Pull request created successfully
                    pull_request_url: https://github.com/octocat/hello-world/pull/101
                    _links:
                      self: /api/v1/tools/github/actions/create_pull_request
                      tool: /api/v1/tools/github
        '400':
          $ref: '../context_api.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../context_api.yaml#/components/responses/Unauthorized'
        '404':
          $ref: '../context_api.yaml#/components/responses/NotFound'
        '500':
          $ref: '../context_api.yaml#/components/responses/InternalServerError'

  /tools/github/actions/merge_pull_request:
    post:
      summary: Merge a GitHub pull request
      description: Merges an open pull request in a GitHub repository.
      tags:
        - tools
        - github
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MergePullRequestRequest'
            examples:
              default:
                value:
                  owner: octocat
                  repo: hello-world
                  pull_number: 101
      responses:
        '200':
          description: Pull request merged successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MergePullRequestResponse'
              examples:
                default:
                  value:
                    status: success
                    message: Pull request merged successfully
                    pull_request_url: https://github.com/octocat/hello-world/pull/101
                    _links:
                      self: /api/v1/tools/github/actions/merge_pull_request
                      tool: /api/v1/tools/github
        '400':
          $ref: '../context_api.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../context_api.yaml#/components/responses/Unauthorized'
        '404':
          $ref: '../context_api.yaml#/components/responses/NotFound'
        '500':
          $ref: '../context_api.yaml#/components/responses/InternalServerError'

  /tools/github/actions/add_comment:
    post:
      summary: Add a comment to an issue or pull request
      description: Adds a comment to a specified issue or pull request in a repository.
      tags:
        - tools
        - github
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddCommentRequest'
            examples:
              default:
                value:
                  owner: octocat
                  repo: hello-world
                  issue_number: 42
                  body: "This is a comment."
      responses:
        '200':
          description: Comment added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddCommentResponse'
              examples:
                default:
                  value:
                    status: success
                    message: Comment added successfully
                    comment_url: https://github.com/octocat/hello-world/issues/42#issuecomment-1
                    _links:
                      self: /api/v1/tools/github/actions/add_comment
                      tool: /api/v1/tools/github
        '400':
          $ref: '../context_api.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../context_api.yaml#/components/responses/Unauthorized'
        '404':
          $ref: '../context_api.yaml#/components/responses/NotFound'
        '500':
          $ref: '../context_api.yaml#/components/responses/InternalServerError'

  /tools/github/actions/get_repository:
    post:
      summary: Get repository details
      description: Retrieves details about a specific GitHub repository.
      tags:
        - tools
        - github
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetRepositoryRequest'
            examples:
              default:
                value:
                  owner: octocat
                  repo: hello-world
      responses:
        '200':
          description: Repository details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRepositoryResponse'
              examples:
                default:
                  value:
                    status: success
                    repository:
                      name: hello-world
                      full_name: octocat/hello-world
                      private: false
                    _links:
                      self: /api/v1/tools/github/actions/get_repository
                      tool: /api/v1/tools/github
        '400':
          $ref: '../context_api.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../context_api.yaml#/components/responses/Unauthorized'
        '404':
          $ref: '../context_api.yaml#/components/responses/NotFound'
        '500':
          $ref: '../context_api.yaml#/components/responses/InternalServerError'

  /tools/github/actions/list_repositories:
    post:
      summary: List repositories for a user or organization
      description: Lists repositories for the specified owner (user or org).
      tags:
        - tools
        - github
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListRepositoriesRequest'
            examples:
              default:
                value:
                  owner: octocat
      responses:
        '200':
          description: Repositories listed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRepositoriesResponse'
              examples:
                default:
                  value:
                    status: success
                    repositories:
                      - name: hello-world
                        full_name: octocat/hello-world
                        private: false
                      - name: another-repo
                        full_name: octocat/another-repo
                        private: true
                    _links:
                      self: /api/v1/tools/github/actions/list_repositories
                      tool: /api/v1/tools/github
        '400':
          $ref: '../context_api.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../context_api.yaml#/components/responses/Unauthorized'
        '404':
          $ref: '../context_api.yaml#/components/responses/NotFound'
        '500':
          $ref: '../context_api.yaml#/components/responses/InternalServerError'

  /tools/github/actions/get_pull_request:
    post:
      summary: Get pull request details
      description: Retrieves details about a specific pull request.
      tags:
        - tools
        - github
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetPullRequestRequest'
            examples:
              default:
                value:
                  owner: octocat
                  repo: hello-world
                  pull_number: 101
      responses:
        '200':
          description: Pull request details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPullRequestResponse'
              examples:
                default:
                  value:
                    status: success
                    pull_request:
                      number: 101
                      title: Add new feature
                      state: open
                    _links:
                      self: /api/v1/tools/github/actions/get_pull_request
                      tool: /api/v1/tools/github
        '400':
          $ref: '../context_api.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../context_api.yaml#/components/responses/Unauthorized'
        '404':
          $ref: '../context_api.yaml#/components/responses/NotFound'
        '500':
          $ref: '../context_api.yaml#/components/responses/InternalServerError'

  /tools/github/actions/list_pull_requests:
    post:
      summary: List pull requests
      description: Lists pull requests for a repository.
      tags:
        - tools
        - github
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListPullRequestsRequest'
            examples:
              default:
                value:
                  owner: octocat
                  repo: hello-world
      responses:
        '200':
          description: Pull requests listed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPullRequestsResponse'
              examples:
                default:
                  value:
                    status: success
                    pull_requests:
                      - number: 101
                        title: Add new feature
                        state: open
                      - number: 102
                        title: Fix bug
                        state: closed
                    _links:
                      self: /api/v1/tools/github/actions/list_pull_requests
                      tool: /api/v1/tools/github
        '400':
          $ref: '../context_api.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../context_api.yaml#/components/responses/Unauthorized'
        '404':
          $ref: '../context_api.yaml#/components/responses/NotFound'
        '500':
          $ref: '../context_api.yaml#/components/responses/InternalServerError'

  /tools/github/actions/get_issue:
    post:
      summary: Get issue details
      description: Retrieves details about a specific issue.
      tags:
        - tools
        - github
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetIssueRequest'
            examples:
              default:
                value:
                  owner: octocat
                  repo: hello-world
                  issue_number: 42
      responses:
        '200':
          description: Issue details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetIssueResponse'
              examples:
                default:
                  value:
                    status: success
                    issue:
                      number: 42
                      title: Bug in login form
                      state: open
                    _links:
                      self: /api/v1/tools/github/actions/get_issue
                      tool: /api/v1/tools/github
        '400':
          $ref: '../context_api.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../context_api.yaml#/components/responses/Unauthorized'
        '404':
          $ref: '../context_api.yaml#/components/responses/NotFound'
        '500':
          $ref: '../context_api.yaml#/components/responses/InternalServerError'

  /tools/github/actions/list_issues:
    post:
      summary: List issues
      description: Lists issues for a repository.
      tags:
        - tools
        - github
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListIssuesRequest'
            examples:
              default:
                value:
                  owner: octocat
                  repo: hello-world
      responses:
        '200':
          description: Issues listed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListIssuesResponse'
              examples:
                default:
                  value:
                    status: success
                    issues:
                      - number: 42
                        title: Bug in login form
                        state: open
                      - number: 43
                        title: Feature request
                        state: closed
                    _links:
                      self: /api/v1/tools/github/actions/list_issues
                      tool: /api/v1/tools/github
        '400':
          $ref: '../context_api.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../context_api.yaml#/components/responses/Unauthorized'
        '404':
          $ref: '../context_api.yaml#/components/responses/NotFound'
        '500':
          $ref: '../context_api.yaml#/components/responses/InternalServerError'

  /tools/github/actions/archive_repository:
    post:
      summary: Archive a repository
      description: Archives a GitHub repository (deletion is not allowed for safety).
      tags:
        - tools
        - github
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArchiveRepositoryRequest'
            examples:
              default:
                value:
                  owner: octocat
                  repo: hello-world
      responses:
        '200':
          description: Repository archived successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArchiveRepositoryResponse'
              examples:
                default:
                  value:
                    status: success
                    message: Repository archived successfully
                    _links:
                      self: /api/v1/tools/github/actions/archive_repository
                      tool: /api/v1/tools/github
        '400':
          $ref: '../context_api.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../context_api.yaml#/components/responses/Unauthorized'
        '404':
          $ref: '../context_api.yaml#/components/responses/NotFound'
        '500':
          $ref: '../context_api.yaml#/components/responses/InternalServerError'
