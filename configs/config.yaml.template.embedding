# Embedding Configuration Template
# Copy this file to config.yaml and update with your settings

# Import the appropriate base configuration
_base: config.development.yaml  # or config.production.yaml

# Embedding Provider Configuration
# At least one provider must be enabled
embedding:
  providers:
    # OpenAI Configuration
    openai:
      enabled: true  # Set to true if using OpenAI
      api_key: "sk-..."  # Your OpenAI API key
      
    # AWS Bedrock Configuration  
    bedrock:
      enabled: false  # Set to true if using AWS Bedrock
      region: "us-east-1"  # Your AWS region
      # endpoint: ""  # Optional: Custom endpoint
      # assume_role_arn: ""  # Optional: IAM role to assume
      
    # Google AI Configuration
    google:
      enabled: false  # Set to true if using Google AI
      api_key: "..."  # Your Google AI API key
      # endpoint: ""  # Optional: Custom endpoint

# Example Agent Configurations
# These can be created/updated via API, shown here for reference
example_agents:
  # High-quality agent for important documents
  research_agent:
    agent_id: "research-001"
    embedding_strategy: "quality"
    model_preferences:
      primary_models:
        - "text-embedding-3-large"  # Best quality from OpenAI
      fallback_models:
        - "text-embedding-3-small"
    constraints:
      max_tokens_per_request: 8000
      max_cost_per_day: 50.0
      preferred_dimensions: 3072  # Use full dimensions
      allow_dimension_reduction: false
      
  # Cost-optimized agent for high-volume processing
  bulk_processor:
    agent_id: "bulk-001"
    embedding_strategy: "cost"
    model_preferences:
      primary_models:
        - "text-embedding-ada-002"  # Cheapest option
        - "amazon.titan-embed-text-v2:0"  # If Bedrock enabled
      fallback_models: []
    constraints:
      max_tokens_per_request: 8000
      max_cost_per_day: 10.0
      preferred_dimensions: 1536
      allow_dimension_reduction: true
      
  # Balanced agent for general use
  general_agent:
    agent_id: "general-001"
    embedding_strategy: "balanced"
    model_preferences:
      primary_models:
        - "text-embedding-3-small"
      fallback_models:
        - "text-embedding-ada-002"
    constraints:
      max_tokens_per_request: 8000
      max_cost_per_day: 25.0
      preferred_dimensions: 1536
      allow_dimension_reduction: true
      
  # Multilingual agent
  multilingual_agent:
    agent_id: "multilingual-001"
    embedding_strategy: "quality"
    model_preferences:
      primary_models:
        - "cohere.embed-multilingual-v3"  # If Bedrock enabled
        - "text-embedding-3-large"
      fallback_models:
        - "text-embedding-3-small"
    constraints:
      max_tokens_per_request: 512  # Cohere has lower limits
      max_cost_per_day: 30.0
      preferred_dimensions: 1024
      allow_dimension_reduction: true

# Database Configuration for Embeddings
database:
  # Ensure pgvector extension is installed
  # CREATE EXTENSION IF NOT EXISTS vector;
  
  # Vector index configuration
  vector:
    enabled: true
    index_type: "ivfflat"  # or "hnsw" for better recall
    lists: 100  # For ivfflat
    probes: 10  # For ivfflat
    # m: 16  # For hnsw
    # ef_construction: 200  # For hnsw
    dimensions: 1536  # Default dimensions

# Environment Variables Reference
# These can be set instead of hardcoding values:
#
# OPENAI_API_KEY=sk-...
# OPENAI_ENABLED=true
#
# BEDROCK_ENABLED=true
# AWS_REGION=us-east-1
# BEDROCK_ENDPOINT=https://...  # Optional
# BEDROCK_ROLE_ARN=arn:aws:iam::...  # Optional
#
# GOOGLE_AI_API_KEY=...
# GOOGLE_AI_ENABLED=true
# GOOGLE_AI_ENDPOINT=https://...  # Optional