# TLS-enabled configuration for functional tests
# This configuration is used when TEST_TLS_ENABLED=true

environment: test

# API Configuration with TLS
api:
  listen_address: ":8443"
  base_url: "https://localhost:8443"
  enable_cors: true
  enable_swagger: true
  
  # TLS Configuration
  tls:
    enabled: true
    min_version: "1.3"  # Default to TLS 1.3
    cert_file: "${TLS_CERT_FILE}"
    key_file: "${TLS_KEY_FILE}"
    ca_file: "${TLS_CA_FILE}"
    verify_certificates: false  # For self-signed certs in testing
    insecure_skip_verify: true  # For testing only
    
    # Performance options
    session_tickets: true
    session_cache_size: 100
    
    # Cipher suites (TLS 1.2 only, TLS 1.3 auto-selected)
    cipher_suites:
      - TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
      - TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
      - TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
      - TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384

# Cache Configuration with TLS
cache:
  type: redis
  redis:
    addr: "${REDIS_ADDR}"
    password: "${REDIS_PASSWORD}"
    db: 0
    
    # TLS for Redis
    tls:
      enabled: false  # Set to true for TLS-enabled Redis
      min_version: "1.2"
      insecure_skip_verify: true  # For ElastiCache via SSH tunnel

# Database Configuration with TLS
database:
  driver: postgres
  dsn: "${DATABASE_DSN}"
  ssl_mode: "disable"  # Change to "require" for TLS
  
  # TLS configuration
  tls:
    enabled: false  # Set to true for TLS-enabled PostgreSQL
    min_version: "1.2"
    cert_file: "${DB_TLS_CERT_FILE}"
    key_file: "${DB_TLS_KEY_FILE}"
    ca_file: "${DB_TLS_CA_FILE}"

# MCP Server Configuration
mcp_server:
  listen_address: ":8443"
  
  # TLS Configuration (same as API)
  tls:
    enabled: true
    min_version: "1.3"
    cert_file: "${TLS_CERT_FILE}"
    key_file: "${TLS_KEY_FILE}"
    ca_file: "${TLS_CA_FILE}"
    verify_certificates: false
    insecure_skip_verify: true
    session_tickets: true
    session_cache_size: 100

# WebSocket specific settings
websocket:
  ping_interval: 30s
  pong_timeout: 60s
  write_timeout: 10s
  read_timeout: 60s
  max_message_size: 104857600  # 100MB
  enable_compression: true

# Authentication
auth:
  jwt:
    secret: "${JWT_SECRET}"
    expiration: 3600
  api_keys:
    - key: "${ADMIN_API_KEY}"
      tenant_id: "admin"
      role: "admin"