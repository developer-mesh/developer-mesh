paths:
  /models:
    get:
      tags:
        - Models
      summary: List AI models
      description: |
        Returns a list of all configured AI models. Models define the AI capabilities,
        providers, and configurations available for agents.
      operationId: listModels
      parameters:
        - $ref: '../common/parameters.yaml#/components/parameters/Page'
        - $ref: '../common/parameters.yaml#/components/parameters/Limit'
        - $ref: '../common/parameters.yaml#/components/parameters/Sort'
        - name: provider
          in: query
          description: Filter by provider
          schema:
            type: string
            enum: [openai, anthropic, bedrock, azure, google]
          example: "openai"
        - name: type
          in: query
          description: Filter by model type
          schema:
            type: string
            enum: [chat, embedding, completion, vision, audio]
          example: "chat"
        - name: active
          in: query
          description: Filter by active status
          schema:
            type: boolean
          example: true
      responses:
        '200':
          description: List of models
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListModelsResponse'
        '401':
          $ref: '../common/responses.yaml#/components/responses/Unauthorized'
        '500':
          $ref: '../common/responses.yaml#/components/responses/InternalServerError'
    
    post:
      tags:
        - Models
      summary: Create AI model
      description: |
        Registers a new AI model configuration. Models must be tested and validated
        before they can be used by agents.
      operationId: createModel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateModelRequest'
            examples:
              openai_model:
                summary: OpenAI GPT-4 model
                value:
                  name: "gpt-4-turbo"
                  provider: "openai"
                  type: "chat"
                  configuration:
                    api_endpoint: "https://api.openai.com/v1/chat/completions"
                    model_id: "gpt-4-turbo-preview"
                    max_context_length: 128000
                    supports_functions: true
                    supports_vision: true
              anthropic_model:
                summary: Anthropic Claude model
                value:
                  name: "claude-3-opus"
                  provider: "anthropic"
                  type: "chat"
                  configuration:
                    api_endpoint: "https://api.anthropic.com/v1/messages"
                    model_id: "claude-3-opus-20240229"
                    max_context_length: 200000
                    supports_functions: false
              embedding_model:
                summary: Embedding model
                value:
                  name: "text-embedding-ada-002"
                  provider: "openai"
                  type: "embedding"
                  configuration:
                    api_endpoint: "https://api.openai.com/v1/embeddings"
                    model_id: "text-embedding-ada-002"
                    dimensions: 1536
                    max_input_tokens: 8191
      responses:
        '201':
          description: Model created successfully
          headers:
            Location:
              description: URL of the created model
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Model'
        '400':
          $ref: '../common/responses.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../common/responses.yaml#/components/responses/Unauthorized'
        '409':
          $ref: '../common/responses.yaml#/components/responses/Conflict'
        '500':
          $ref: '../common/responses.yaml#/components/responses/InternalServerError'

  /models/{id}:
    parameters:
      - $ref: '../common/parameters.yaml#/components/parameters/ID'
    
    get:
      tags:
        - Models
      summary: Get model details
      description: Returns detailed information about a specific AI model
      operationId: getModel
      parameters:
        - name: include_stats
          in: query
          description: Include usage statistics
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Model details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Model'
        '401':
          $ref: '../common/responses.yaml#/components/responses/Unauthorized'
        '404':
          $ref: '../common/responses.yaml#/components/responses/NotFound'
        '500':
          $ref: '../common/responses.yaml#/components/responses/InternalServerError'
    
    put:
      tags:
        - Models
      summary: Update model
      description: |
        Updates an existing model configuration. Changes may require re-validation
        and could affect agents using this model.
      operationId: updateModel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateModelRequest'
            example:
              configuration:
                max_context_length: 200000
                rate_limit_override: 1000
              status: "active"
      responses:
        '200':
          description: Model updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Model'
        '400':
          $ref: '../common/responses.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../common/responses.yaml#/components/responses/Unauthorized'
        '404':
          $ref: '../common/responses.yaml#/components/responses/NotFound'
        '409':
          description: Cannot update model in use by active agents
          content:
            application/json:
              schema:
                $ref: '../common/schemas.yaml#/components/schemas/Error'
        '500':
          $ref: '../common/responses.yaml#/components/responses/InternalServerError'
    
    delete:
      tags:
        - Models
      summary: Delete model
      description: |
        Deletes a model configuration. Models cannot be deleted if they are
        currently in use by any agents.
      operationId: deleteModel
      responses:
        '204':
          description: Model deleted successfully
        '401':
          $ref: '../common/responses.yaml#/components/responses/Unauthorized'
        '404':
          $ref: '../common/responses.yaml#/components/responses/NotFound'
        '409':
          description: Cannot delete model in use
          content:
            application/json:
              schema:
                $ref: '../common/schemas.yaml#/components/schemas/Error'
        '500':
          $ref: '../common/responses.yaml#/components/responses/InternalServerError'

  /models/{id}/test:
    parameters:
      - $ref: '../common/parameters.yaml#/components/parameters/ID'
    
    post:
      tags:
        - Models
      summary: Test model
      description: |
        Tests a model configuration to ensure it's working correctly. This validates
        API credentials, endpoints, and basic functionality.
      operationId: testModel
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestModelRequest'
            example:
              test_prompt: "Hello, please respond with 'OK' if you can read this."
              test_embedding_text: "This is a test for embedding generation."
      responses:
        '200':
          description: Model test results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestModelResponse'
        '400':
          $ref: '../common/responses.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../common/responses.yaml#/components/responses/Unauthorized'
        '404':
          $ref: '../common/responses.yaml#/components/responses/NotFound'
        '500':
          $ref: '../common/responses.yaml#/components/responses/InternalServerError'

components:
  schemas:
    Model:
      type: object
      required:
        - id
        - name
        - provider
        - type
        - status
        - created_at
        - updated_at
      properties:
        id:
          type: string
          description: Unique model identifier
          example: "model-456"
        name:
          type: string
          description: Model name
          example: "gpt-4-turbo"
        provider:
          type: string
          enum: [openai, anthropic, bedrock, azure, google, custom]
          description: Model provider
          example: "openai"
        type:
          type: string
          enum: [chat, embedding, completion, vision, audio]
          description: Model type
          example: "chat"
        configuration:
          $ref: '#/components/schemas/ModelConfiguration'
        status:
          type: string
          enum: [active, inactive, testing, failed]
          description: Model status
          example: "active"
        capabilities:
          $ref: '#/components/schemas/ModelCapabilities'
        tenant_id:
          type: string
          description: Tenant identifier
          example: "tenant-123"
        created_at:
          $ref: '../common/schemas.yaml#/components/schemas/Timestamp'
        updated_at:
          $ref: '../common/schemas.yaml#/components/schemas/Timestamp'
        last_tested:
          $ref: '../common/schemas.yaml#/components/schemas/Timestamp'
        statistics:
          $ref: '#/components/schemas/ModelStatistics'
        _links:
          $ref: '../common/schemas.yaml#/components/schemas/Links'

    CreateModelRequest:
      type: object
      required:
        - name
        - provider
        - type
        - configuration
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
          description: Model name
          example: "gpt-4-turbo"
        provider:
          type: string
          enum: [openai, anthropic, bedrock, azure, google, custom]
          description: Model provider
        type:
          type: string
          enum: [chat, embedding, completion, vision, audio]
          description: Model type
        configuration:
          $ref: '#/components/schemas/ModelConfiguration'
        capabilities:
          $ref: '#/components/schemas/ModelCapabilities'

    UpdateModelRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        configuration:
          $ref: '#/components/schemas/ModelConfiguration'
        capabilities:
          $ref: '#/components/schemas/ModelCapabilities'
        status:
          type: string
          enum: [active, inactive]

    ModelConfiguration:
      type: object
      required:
        - api_endpoint
      properties:
        api_endpoint:
          type: string
          format: uri
          description: API endpoint URL
          example: "https://api.openai.com/v1/chat/completions"
        api_key_env:
          type: string
          description: Environment variable name for API key
          example: "OPENAI_API_KEY"
        model_id:
          type: string
          description: Provider's model identifier
          example: "gpt-4-turbo-preview"
        max_context_length:
          type: integer
          description: Maximum context window size
          example: 128000
        max_output_tokens:
          type: integer
          description: Maximum output tokens
          example: 4096
        temperature_default:
          type: number
          format: float
          minimum: 0
          maximum: 2
          description: Default temperature setting
          example: 0.7
        dimensions:
          type: integer
          description: Embedding dimensions (for embedding models)
          example: 1536
        rate_limit_override:
          type: integer
          description: Custom rate limit (requests/hour)
          example: 1000
        timeout_seconds:
          type: integer
          description: Request timeout
          example: 60
        retry_attempts:
          type: integer
          description: Number of retry attempts
          example: 3
        custom_headers:
          type: object
          additionalProperties:
            type: string
          description: Custom headers for API requests

    ModelCapabilities:
      type: object
      properties:
        supports_functions:
          type: boolean
          description: Supports function/tool calling
          example: true
        supports_vision:
          type: boolean
          description: Supports image inputs
          example: true
        supports_streaming:
          type: boolean
          description: Supports streaming responses
          example: true
        supports_json_mode:
          type: boolean
          description: Supports JSON response format
          example: true
        supports_system_prompt:
          type: boolean
          description: Supports system prompts
          example: true
        max_image_size:
          type: integer
          description: Maximum image size in MB
          example: 20
        supported_file_types:
          type: array
          items:
            type: string
          description: Supported file types for multimodal input
          example: ["jpg", "png", "gif", "webp"]

    ModelStatistics:
      type: object
      properties:
        total_requests:
          type: integer
          description: Total API requests
          example: 10000
        total_tokens:
          type: integer
          description: Total tokens processed
          example: 5000000
        average_latency_ms:
          type: number
          format: float
          description: Average response time
          example: 1250.5
        error_rate:
          type: number
          format: float
          description: Error rate (0-1)
          example: 0.02
        last_24h_requests:
          type: integer
          description: Requests in last 24 hours
          example: 500
        cost_estimate_usd:
          type: number
          format: float
          description: Estimated cost in USD
          example: 125.50

    TestModelRequest:
      type: object
      properties:
        test_prompt:
          type: string
          description: Test prompt for chat/completion models
          example: "Hello, please respond with 'OK' if you can read this."
        test_embedding_text:
          type: string
          description: Test text for embedding models
          example: "This is a test for embedding generation."
        test_image_url:
          type: string
          format: uri
          description: Test image URL for vision models

    TestModelResponse:
      type: object
      required:
        - success
        - tests
      properties:
        success:
          type: boolean
          description: Overall test success
          example: true
        tests:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                example: "API Connection"
              passed:
                type: boolean
                example: true
              message:
                type: string
                example: "Successfully connected to API"
              duration_ms:
                type: integer
                example: 245
          description: Individual test results
        model_info:
          type: object
          properties:
            reported_model:
              type: string
              example: "gpt-4-0125-preview"
            context_length:
              type: integer
              example: 128000
            capabilities:
              type: object
          description: Model information from API
        warnings:
          type: array
          items:
            type: string
          description: Non-fatal warnings
          example:
            - "Rate limit is lower than expected"
            - "Response time is above recommended threshold"

    ListModelsResponse:
      type: object
      required:
        - models
      properties:
        models:
          type: array
          items:
            $ref: '#/components/schemas/Model'
        meta:
          $ref: '../common/schemas.yaml#/components/schemas/PaginationMeta'
        summary:
          type: object
          properties:
            total_models:
              type: integer
            by_provider:
              type: object
              additionalProperties:
                type: integer
            by_type:
              type: object
              additionalProperties:
                type: integer
            active_models:
              type: integer
          description: Summary statistics
        _links:
          $ref: '../common/schemas.yaml#/components/schemas/Links'