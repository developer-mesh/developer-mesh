# MCP Server Configuration

# Environment (dev, staging, prod)
environment: "prod"

api:
  listen_address: ":8080"
  read_timeout: 30s
  write_timeout: 30s
  idle_timeout: 90s
  enable_cors: true
  enable_swagger: false
  tls_cert_file: ""
  tls_key_file: ""
  base_path: "/api/v1"
  log_requests: true
  cors_origins:
    - "http://localhost:3000"
  rate_limit:
    enabled: true
    limit: 1000
    burst: 5
    expiration: 1m
  auth:
    require_auth: true
    jwt_secret: "${JWT_SECRET}"
    jwt_expiration: 60m
    token_renewal_threshold: 10m
    api_keys:
      admin: "${ADMIN_API_KEY}"
      reader: "${READER_API_KEY}"
    webhook:
    enabled: true
    github_endpoint: "/api/webhooks/github"
    github_secret: "${GITHUB_WEBHOOK_SECRET}"
    github_allowed_events:
      - issues
      - push

cache:
  type: "redis"
  # For AWS, settings are now in aws.elasticache
  # Only set these if using a local Redis instance
  # address: "localhost:6379"
  # password: ""
  db: 0
  pool_size: 10
  min_idle_conns: 2
  dial_timeout: 5s
  read_timeout: 3s
  write_timeout: 3s

monitoring:
  prometheus:
    enabled: true
    path: "/metrics"
    vector_metrics:
      enabled: true
      collect_histograms: true
      percentiles: [0.5, 0.9, 0.95, 0.99]
  logging:
    level: "info"
    format: "json"
    output: "stdout"
    file_path: ""

aws:
  rds:
    role_arn: ""
    auth:
      region: "us-west-2"
    host: "${RDS_HOST}"
    port: 5432
    username: "${RDS_USERNAME}"
    password: "${RDS_PASSWORD}"
    database: "${RDS_DATABASE}"
    ssl_mode: "require"
    use_iam_auth: true
    token_expiration: 900 # 15 minutes (AWS default)
    max_open_conns: 100   # Increased for high concurrency
    max_idle_conns: 25    # Increased for high concurrency
    conn_max_lifetime: 30m
    connection_timeout: 10 # seconds
    enable_pooling: true
    min_pool_size: 10
    max_pool_size: 50
  elasticache:
    role_arn: ""
    auth:
      region: "us-west-2"
    primary_endpoint: "${ELASTICACHE_ENDPOINT}"
    port: 6379
    username: "${ELASTICACHE_USERNAME}"
    password: "${ELASTICACHE_PASSWORD}"
    use_iam_auth: true
    cluster_mode: true
    cluster_name: "mcp-cache"
    cluster_discovery: true
    use_tls: true
    insecure_skip_verify: false
    max_retries: 3
    min_idle_connections: 20   # Increased for high concurrency
    pool_size: 50              # Increased for high concurrency
    dial_timeout: 5
    read_timeout: 3
    write_timeout: 3
    pool_timeout: 4
    token_expiration: 900
  s3:
    role_arn: ""
    bucket: "mcp-contexts"
    use_iam_auth: true
    region: "us-west-2"
    endpoint: ""
    assume_role: ""
    force_path_style: false
    upload_part_size: 10485760
    download_part_size: 10485760
    concurrency: 20 # Increased for higher parallel S3 operations
    request_timeout: 60s
    server_side_encryption: "AES256"

# Reference aws.rds, aws.elasticache, aws.s3 below for all cloud settings
# Only override in database/cache/storage if using local/non-cloud services

database:
  driver: "postgres"
  # For AWS, settings are now in aws.rds
  # Only set these if using a local or non-RDS database
  # dsn: ""
  # host: "localhost"
  # port: 5432
  # username: "postgres"
  # password: ""
  # database: "mcp"
  ssl_mode: "require"
  max_open_conns: 25
  max_idle_conns: 5
  conn_max_lifetime: 30m
  vector:
    enabled: true
    index_type: "ivfflat"
    lists: 100
    probes: 10
    pool:
      enabled: false
      max_open_conns: 25
      max_idle_conns: 5
      conn_max_lifetime: 10m

engine:
  event_buffer_size: 10000
  concurrency_limit: 20
  event_timeout: 30s
  max_tool_duration: 10m
  default_model_id: "gpt-3.5-turbo"
  log_events: true

adapters:
  github:
    token: "${GITHUB_TOKEN}"
    webhook_secret: "${GITHUB_WEBHOOK_SECRET}"
    base_url: "https://api.github.com/"
    request_timeout: 30s
    max_idle_conns: 10
    max_conns_per_host: 10
    max_idle_conns_per_host: 10
    idle_conn_timeout: 90s
    keep_alive: 30s
    tls_handshake_timeout: 10s
    enable_graphql_builder: true
    enable_resilient_retry: true
    enable_distributed_cache: false
    cache_type: "memory"
    cache_redis_url: "${GITHUB_CACHE_REDIS_URL}"
    cache_key_prefix: "github:"
    cache_default_ttl: 1h

storage:
  context_storage:
    provider: "s3"
    # S3 config is now in aws.s3
    s3_path_prefix: "contexts"
    embedding_storage:
      enable_preprocessing: true
      enable_caching: true
      default_similarity_threshold: 0.75
