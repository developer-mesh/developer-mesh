name: Simple Deploy to Production

on:
  workflow_dispatch:  # Manual trigger only for safety

env:
  EC2_HOST: 44.211.47.174

jobs:
  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ env.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Create .env file
        run: |
          cat > .env.production << EOF
          # Database
          DATABASE_HOST=${{ secrets.DATABASE_HOST }}
          DATABASE_PORT=5432
          DATABASE_USER=dbadmin
          DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}
          DATABASE_NAME=devops_mcp
          DATABASE_SSL_MODE=require
          
          # Redis  
          REDIS_ADDR=${{ secrets.REDIS_ENDPOINT }}
          REDIS_TLS_ENABLED=true
          MCP_REDIS_ADDR=${{ secrets.REDIS_ENDPOINT }}
          MCP_REDIS_TLS_ENABLED=true
          
          # AWS
          AWS_REGION=us-east-1
          AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          S3_BUCKET=${{ secrets.S3_BUCKET }}
          SQS_QUEUE_URL=${{ secrets.SQS_QUEUE_URL }}
          
          # Application
          ENVIRONMENT=production
          MCP_ENV=production
          ADMIN_API_KEY=${{ secrets.ADMIN_API_KEY }}
          GITHUB_TOKEN=${{ github.token }}
          EOF

      - name: Copy files to EC2
        run: |
          scp -i ~/.ssh/id_rsa .env.production ec2-user@${{ env.EC2_HOST }}:/home/ec2-user/devops-mcp/.env
          scp -i ~/.ssh/id_rsa docker-compose.production.yml ec2-user@${{ env.EC2_HOST }}:/home/ec2-user/devops-mcp/docker-compose.yml
          scp -i ~/.ssh/id_rsa -r configs ec2-user@${{ env.EC2_HOST }}:/home/ec2-user/devops-mcp/

      - name: Deploy Services
        run: |
          ssh -i ~/.ssh/id_rsa ec2-user@${{ env.EC2_HOST }} << 'ENDSSH'
            cd /home/ec2-user/devops-mcp
            
            # Pull latest images
            docker-compose pull
            
            # Restart services
            docker-compose down
            docker-compose up -d
            
            # Wait for services to start
            sleep 30
            
            # Check status
            docker-compose ps
          ENDSSH

      - name: Health Check
        run: |
          sleep 10
          
          # Check MCP server
          response=$(curl -s -o /dev/null -w "%{http_code}" https://mcp.dev-mesh.io/health)
          if [ $response -eq 200 ]; then
            echo "✅ MCP Server is healthy"
          else
            echo "❌ MCP Server health check failed (HTTP $response)"
            exit 1
          fi
          
          # Check REST API
          response=$(curl -s -o /dev/null -w "%{http_code}" https://api.dev-mesh.io/health)
          if [ $response -eq 200 ]; then
            echo "✅ REST API is healthy"
          else
            echo "❌ REST API health check failed (HTTP $response)"
            exit 1
          fi

      - name: Deployment Summary
        if: success()
        run: |
          echo "🎉 Deployment Successful!"
          echo "- MCP Server: https://mcp.dev-mesh.io"
          echo "- REST API: https://api.dev-mesh.io"
          echo "- Commit: ${{ github.sha }}"