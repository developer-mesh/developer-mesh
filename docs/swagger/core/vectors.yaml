paths:
  /vectors/store:
    post:
      tags:
        - Vectors
      summary: Store vector embeddings
      description: |
        Stores vector embeddings with associated metadata. This endpoint is used to index
        content for semantic search and similarity matching. Supports multiple embedding
        models and batch operations.
      operationId: storeVectors
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoreVectorsRequest'
            examples:
              single_vector:
                summary: Store single vector
                value:
                  vectors:
                    - id: "doc-123"
                      content: "GitHub Actions is a CI/CD platform that automates builds"
                      vector: [0.1, 0.2, 0.3]
                      metadata:
                        source: "github-docs"
                        type: "documentation"
                        url: "https://docs.github.com/actions"
                  model: "text-embedding-ada-002"
              batch_vectors:
                summary: Store multiple vectors
                value:
                  vectors:
                    - id: "doc-123"
                      content: "GitHub Actions CI/CD automation"
                      vector: [0.1, 0.2, 0.3]
                      metadata:
                        source: "github-docs"
                    - id: "doc-124"
                      content: "GitHub Actions workflows"
                      vector: [0.4, 0.5, 0.6]
                      metadata:
                        source: "github-docs"
                  model: "text-embedding-ada-002"
      responses:
        '201':
          description: Vectors stored successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoreVectorsResponse'
        '400':
          $ref: '../common/responses.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../common/responses.yaml#/components/responses/Unauthorized'
        '409':
          description: Vector ID already exists
          content:
            application/json:
              schema:
                $ref: '../common/schemas.yaml#/components/schemas/Error'
        '413':
          description: Payload too large
          content:
            application/json:
              schema:
                $ref: '../common/schemas.yaml#/components/schemas/Error'
        '500':
          $ref: '../common/responses.yaml#/components/responses/InternalServerError'

  /vectors/search:
    post:
      tags:
        - Vectors
      summary: Search vectors
      description: |
        Performs vector similarity search using a query vector. Returns the most similar
        vectors based on cosine similarity or other distance metrics.
      operationId: searchVectors
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VectorSearchRequest'
            examples:
              simple_search:
                summary: Simple vector search
                value:
                  vector: [0.1, 0.2, 0.3]
                  limit: 10
                  threshold: 0.7
              filtered_search:
                summary: Search with metadata filters
                value:
                  vector: [0.1, 0.2, 0.3]
                  limit: 20
                  threshold: 0.8
                  filters:
                    source: "github-docs"
                    type: "documentation"
                  model: "text-embedding-ada-002"
      responses:
        '200':
          description: Search results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VectorSearchResponse'
        '400':
          $ref: '../common/responses.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../common/responses.yaml#/components/responses/Unauthorized'
        '500':
          $ref: '../common/responses.yaml#/components/responses/InternalServerError'

  /vectors/{id}:
    parameters:
      - name: id
        in: path
        required: true
        description: Vector ID
        schema:
          type: string
        example: "vec-123"
    
    get:
      tags:
        - Vectors
      summary: Get vector by ID
      description: Retrieves a specific vector embedding with its metadata
      operationId: getVector
      parameters:
        - name: include_vector
          in: query
          description: Include the actual vector values in response
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Vector details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vector'
        '401':
          $ref: '../common/responses.yaml#/components/responses/Unauthorized'
        '404':
          $ref: '../common/responses.yaml#/components/responses/NotFound'
        '500':
          $ref: '../common/responses.yaml#/components/responses/InternalServerError'
    
    delete:
      tags:
        - Vectors
      summary: Delete vector
      description: Permanently deletes a vector embedding and its metadata
      operationId: deleteVector
      responses:
        '204':
          description: Vector deleted successfully
        '401':
          $ref: '../common/responses.yaml#/components/responses/Unauthorized'
        '404':
          $ref: '../common/responses.yaml#/components/responses/NotFound'
        '500':
          $ref: '../common/responses.yaml#/components/responses/InternalServerError'

components:
  schemas:
    Vector:
      type: object
      required:
        - id
        - content
        - metadata
        - created_at
      properties:
        id:
          type: string
          description: Unique vector identifier
          example: "vec-123"
        content:
          type: string
          description: Original content that was embedded
          example: "GitHub Actions is a CI/CD platform"
        vector:
          type: array
          items:
            type: number
            format: float
          description: Vector embedding values (only included if requested)
          example: [0.1, 0.2, 0.3]
        metadata:
          $ref: '../common/schemas.yaml#/components/schemas/Metadata'
        model:
          type: string
          description: Embedding model used
          example: "text-embedding-ada-002"
        dimension:
          type: integer
          description: Vector dimension
          example: 1536
        created_at:
          $ref: '../common/schemas.yaml#/components/schemas/Timestamp'
        updated_at:
          $ref: '../common/schemas.yaml#/components/schemas/Timestamp'

    VectorInput:
      type: object
      required:
        - id
        - content
        - vector
      properties:
        id:
          type: string
          description: Unique identifier for the vector
          example: "doc-123"
        content:
          type: string
          description: Text content to associate with vector
          example: "GitHub Actions CI/CD automation"
        vector:
          type: array
          items:
            type: number
            format: float
          description: Pre-computed embedding vector
          minItems: 1
          maxItems: 4096
        metadata:
          $ref: '../common/schemas.yaml#/components/schemas/Metadata'

    StoreVectorsRequest:
      type: object
      required:
        - vectors
      properties:
        vectors:
          type: array
          items:
            $ref: '#/components/schemas/VectorInput'
          minItems: 1
          maxItems: 100
          description: Vectors to store
        model:
          type: string
          description: Embedding model identifier
          example: "text-embedding-ada-002"
        namespace:
          type: string
          description: Optional namespace for vector isolation
          example: "production-docs"
        replace_on_conflict:
          type: boolean
          default: false
          description: Replace existing vectors with same ID

    StoreVectorsResponse:
      type: object
      required:
        - stored
        - total
      properties:
        stored:
          type: integer
          description: Number of vectors successfully stored
          example: 10
        total:
          type: integer
          description: Total vectors in request
          example: 10
        errors:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              error:
                type: string
          description: Errors for specific vectors
        _links:
          $ref: '../common/schemas.yaml#/components/schemas/Links'

    VectorSearchRequest:
      type: object
      required:
        - vector
      properties:
        vector:
          type: array
          items:
            type: number
            format: float
          description: Query vector for similarity search
          minItems: 1
          maxItems: 4096
        limit:
          type: integer
          minimum: 1
          maximum: 100
          default: 10
          description: Maximum results to return
        threshold:
          type: number
          format: float
          minimum: 0
          maximum: 1
          default: 0.7
          description: Minimum similarity threshold
        filters:
          type: object
          additionalProperties: true
          description: Metadata filters to apply
          example:
            source: "github-docs"
            type: "documentation"
        model:
          type: string
          description: Embedding model (must match stored vectors)
          example: "text-embedding-ada-002"
        namespace:
          type: string
          description: Search within specific namespace
        distance_metric:
          type: string
          enum: [cosine, euclidean, dot_product]
          default: cosine
          description: Distance metric to use
        include_vectors:
          type: boolean
          default: false
          description: Include vector values in results

    VectorSearchResponse:
      type: object
      required:
        - results
        - total
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/VectorSearchResult'
          description: Search results ordered by similarity
        total:
          type: integer
          description: Total number of matches
        query_vector_norm:
          type: number
          format: float
          description: Norm of the query vector
        search_time_ms:
          type: integer
          description: Search execution time in milliseconds

    VectorSearchResult:
      type: object
      required:
        - id
        - content
        - similarity
        - metadata
      properties:
        id:
          type: string
          description: Vector ID
          example: "vec-123"
        content:
          type: string
          description: Original content
          example: "GitHub Actions is a CI/CD platform"
        similarity:
          type: number
          format: float
          minimum: 0
          maximum: 1
          description: Similarity score
          example: 0.95
        distance:
          type: number
          format: float
          description: Distance value
          example: 0.05
        metadata:
          $ref: '../common/schemas.yaml#/components/schemas/Metadata'
        vector:
          type: array
          items:
            type: number
            format: float
          description: Vector values (if requested)